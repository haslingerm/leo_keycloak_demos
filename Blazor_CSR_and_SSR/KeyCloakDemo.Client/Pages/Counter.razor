@page "/counter"
@using LeoAuth
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@attribute [Authorize]
@inject AuthenticationStateProvider AuthenticationStateProvider

<PageTitle>Counter</PageTitle>

<h1>Counter</h1>

<p role="status">Current count: @_currentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>

@code {
    private int _incrementAmount = 1;
    private int _currentCount = 0;

    private void IncrementCount()
    {
        _currentCount += _incrementAmount;
    }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        var userInformation = await AuthenticationStateProvider.GetLeoUserInformation();
        userInformation.Switch(user => _incrementAmount = user.Role switch
                                                          {
                                                              LeoUserRole.Student => 1,
                                                              LeoUserRole.Teacher => 2,
                                                              LeoUserRole.Unknown => -1,
                                                              _                   => throw new ArgumentOutOfRangeException()
                                                          },
                               _ => _incrementAmount = -1);
    }

}